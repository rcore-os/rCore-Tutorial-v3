var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCCCCCCQQHCCCCCCISSSESSEESSSSSFNNNNHNNNNEECFEOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEECEEECMMCMMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNONNNNNNNONNNHNNNNNONOONNNNNNNNNNNONNONFFNNNNNNNNNNNNNNNNNNNNNNHFNNNNNHNNNNNEEEEEEEEEEEEECECECHECCEEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNHHHHECFNNNNONNNNNSSSSSSSSSSSSSSSSSCCHHHHHHHHHHHHHHHHHHHSFEEEEEEEOCHENNHHHHCHEEENHNHNCCEECEECHCECNNNFFNNNNNNNNNNNNNNNONNOONNNNNNNNFNNNNNOOONNNNFFFOONHNNNNNNNNNHNNNNNNNHOHNNNNNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNSTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPFFGPNONNNNNNONNNNNOONNNNONNNNOONNNNNOOONOOOOOOONOONNNNNNNNNSSHHHECHHHHHHHFNNNNNNNNNOOONONONNNO","n":["board","clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","","block","BLOCK_DEVICE","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","","","borrow_mut","","","deref","dma_alloc","dma_dealloc","from","","","into","","","new","phys_to_virt","read_block","try_from","","","try_into","","","type_id","","","virt_to_phys","write_block","File","OpenFlags","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","","","","","from","","","","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","","","","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","","","","try_into","","","","type_id","","","","union","writable","","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","borrow","","","borrow_mut","","","buffer","clone","clone_into","clone_to_uninit","eq","from","","","head","into","","","make_pipe","new","read","read_byte","read_end_with_buffer","readable","","set_write_end","status","tail","to_owned","try_from","","","try_into","","","type_id","","","writable","","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","borrow","","borrow_mut","","from","","into","","read","","readable","","try_from","","try_into","","type_id","","writable","","write","","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","","borrow","","","","","","borrow_mut","","","","","","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","get_bytes_array","get_end","get_mut","","get_pte_array","get_ref","get_start","indexes","into","","","","","","into_iter","","l","","new","","next","page_offset","","partial_cmp","","","","r","","step","","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","","erodata","etext","extend","fmt","","","","","","from","","","","","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","","","","","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","buffers","","clone","","clone_into","","clone_to_uninit","","cmp","complement","contains","current_buffer","current_idx","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","","frames","from","","","","","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","","","","","into_iter","","is_all","is_empty","is_valid","len","map","new","","","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_DUP","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_KILL","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SIGACTION","SYSCALL_SIGPROCMASK","SYSCALL_SIGRETURN","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","check_sigaction_error","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_sigaction","sys_sigprocmask","sys_sigreturn","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","MAX_SIG","PidHandle","SignalAction","SignalActions","SignalFlags","TaskContext","__private_field","action","add_initproc","add_task","borrow","borrow_mut","call_kernel_signal_handler","call_user_signal_handler","check_pending_signals","check_signals_error_of_current","context","current_add_signal","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","handle_signals","into","manager","pid","pid2task","pid_alloc","processor","run_tasks","schedule","signal","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","SignalAction","SignalActions","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","fmt","from","","handler","into","","mask","table","to_owned","","try_from","","try_into","","type_id","","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","PID2TCB","TASK_MANAGER","TaskManager","__private_field","","add","add_task","borrow","","","borrow_mut","","","deref","","fetch","fetch_task","from","","","into","","","new","pid2task","ready_queue","remove_from_pid2task","try_from","","","try_into","","","type_id","","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","get_top","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","try_from","","","","try_into","","","","type_id","","","","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_task","current_trap_cx","current_user_token","deref","from","","get_idle_task_cx_ptr","idle_task_cx","into","","new","run_tasks","schedule","take_current","take_current_task","try_from","","try_into","","type_id","","MAX_SIG","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGDEF","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","check_error","clone","clone_into","clone_to_uninit","cmp","complement","contains","difference","empty","eq","extend","fmt","","","","","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fd_table","fork","from","","","frozen","get_status","get_trap_cx","get_user_token","getpid","handling_sig","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","killed","memory_set","new","parent","pid","signal_actions","signal_mask","signals","task_cx","task_status","to_owned","trap_ctx_backup","trap_cx_ppn","try_from","","","try_into","","","type_id","","","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","to_owned","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[18,"os::board"],[22,"os::config"],[32,"os::console"],[42,"os::drivers"],[45,"os::drivers::block"],[58,"os::drivers::block::virtio_blk"],[92,"os::fs"],[106,"os::fs::inode"],[203,"os::fs::pipe"],[258,"os::fs::stdio"],[282,"os::lang_items"],[283,"os::logging"],[295,"os::mm"],[322,"os::mm::address"],[450,"os::mm::frame_allocator"],[499,"os::mm::heap_allocator"],[504,"os::mm::memory_set"],[639,"os::mm::page_table"],[768,"os::sbi"],[772,"os::sync"],[774,"os::sync::up"],[785,"os::syscall"],[805,"os::syscall::fs"],[811,"os::syscall::process"],[823,"os::task"],[867,"os::task::action"],[897,"os::task::context"],[910,"os::task::manager"],[946,"os::task::pid"],[993,"os::task::processor"],[1023,"os::task::signal"],[1109,"os::task::switch"],[1110,"os::task::task"],[1171,"os::timer"],[1176,"os::trap"],[1185,"os::trap::context"],[1206,"core::fmt"],[1207,"core::result"],[1208,"core::any"],[1209,"easy_fs::block_dev"],[1210,"alloc::sync"],[1211,"alloc::vec"],[1212,"core::cmp"],[1213,"easy_fs::vfs"],[1214,"core::iter::traits::collect"],[1215,"core::option"],[1216,"core::hash"],[1217,"core::panic::panic_info"],[1218,"log"],[1219,"core::marker"],[1220,"core::clone"],[1221,"buddy_system_allocator"],[1222,"core::alloc::layout"],[1223,"alloc::collections::btree::map"],[1224,"alloc::string"],[1225,"core::cell"],[1226,"alloc::collections::vec_deque"],[1227,"riscv::register::sstatus"]],"i":"`````````````````````````````````Ab000`0000`````Ah`00000000`````AnBhLn210220010210210110210210201`````````Bn0`00Cf```00`00Cd111111111DhDj231023333333233333333310233333310333102333`130`31131133333331023102310233111Ed00````Dn000Eb12012022220121012`1010001112012012012000110``EfEh10101010101010101010``El0000`00000```````````````````````````````````````FbFdGh21FfFhFj354210545421054210542105421335421545421355544422211102052250135421030Gl141465653201Fl4376432576432576432576432`````GnH`HbB`130131Hd3241201```1242`124312120124124124`````I`0`````Hn000HjHl20222222220Ib243102434343433330023```343``3433333102430333113331331024333`0001001131311`31``3```333433111024310243102433000Ih00```00``0000000000Gj11IdC`Ij432104310434343444004434342234444422104344442444421043104431221304433424444434222````210432104321043423```````Bd000000000```````````````````````````````````````````````Jh```00`````````0`0`0````````````000``JfJl10101010101101101010101010`Jn00000000000```K`KbKd`021021210`0210210`0`021021021````KhKj0KlKn3210322310210302103`200`02210321032103``LbLd10100```10100010``0`010101`Jd0000000000000000000000000000000`0000000000000000000000000000000000000000000000000000`Lj0```0Lh0Jj1201212222011001211110100012101101011111211012012012```````````````Lf0000000000000000000","f":"`{{}b}`````````{{}d}```````{{}f}0{{}h}`11``11111`{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{cc{}}{{}c{}}{lb}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}{{{h{jAb}}{h{Ad}}}Af}`````{Ahb}=98{{{h{Ah}}}{{h{{Al{Aj}}}}}}87543``<``{Anb};;;:::{{{h{An}}}{{h{{Bd{{Bb{B`}}}}}}}}{ff}{{ff}Bf}<<<;;;{{}Bh}2{{{h{Bh}}f{h{j{Bl{Bj}}}}}b};;;:::9993{{{h{Bh}}f{h{{Bl{Bj}}}}}b}`````````{{{h{Bn}}C`}f}{{{h{Bn}}}Cb}`01`````````{Cdb}{{}Cf}{{CfCf}Cf}{{{h{jCf}}Cf}b}10{{{h{Cf}}}Ch}{CfCh}32{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{{{h{Cf}}}Cf}{{h{h{jc}}}b{}}{{hBj}b}{{{h{Cf}}{h{Cf}}}Cj}{CfCf}{{{h{Cf}}Cf}Cb}{{{h{Cd}}}{{h{{Al{Cl}}}}}}<={{{h{Cf}}{h{Cf}}}Cb}{{{h{jCf}}c}b{{D`{}{{Cn{Cf}}}}}}{{{h{Cf}}{h{jDb}}}Af}0000{cc{}}000{Ch{{Dd{Cf}}}}{ChCf}0{cCf{{D`{}{{Cn{Cf}}}}}}{{{h{Cf}}{h{jc}}}bDf}{DhBd}{DjAl}{{{h{jCf}}Cf}b}{{CfCf}Cf}={{}c{}}000{{{h{Cf}}}Cb}0{{}b}{{CbCb{Al{Cl}}}Dh}{CfCf}{Djf}{{{h{Ad}}Cf}{{Dd{{Al{Dh}}}}}}{{{h{Cf}}{h{Cf}}}{{Dd{Cj}}}}{{{h{Dh}}C`}f}{{{h{Dh}}}{{Bb{Bj}}}}{{{h{Cf}}}{{Dl{CbCb}}}}{{{h{Dh}}}Cb}{DhCb}>{{{h{jCf}}CfCb}b}>?>{hc{}}{{{h{jCf}}Cf}b}{c{{n{e}}}{}{}}000{{}{{n{c}}}{}}000{hA`}000{{CfCf}Cf}87;`````{{}f}`{{{h{Dn}}}Cb}{DnE`}{{{h{Dn}}}f}0{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{EbAl}{{{h{Ed}}}Ed}{{h{h{jc}}}b{}}{{hBj}b}{{{h{Ed}}{h{Ed}}}Cb}{cc{}}00{Dnf}{{}c{}}00{{}{{Dl{{Al{Eb}}{Al{Eb}}}}}}{{}Dn}{{{h{Eb}}C`}f}{{{h{jDn}}}Bj}{{{Al{{Bd{Dn}}}}}Eb}{{{h{Eb}}}Cb}{EbCb}{{{h{jDn}}{h{{Al{Eb}}}}}b}{DnEd}:{hc{}}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{hA`}0076:{{{h{jDn}}Bj}b}{DnDd}:``{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{cc{}}0{{}c{}}0{{{h{Ef}}C`}f}{{{h{Eh}}C`}f}{{{h{Ef}}}Cb}{{{h{Eh}}}Cb}<<;;::1032{{{h{Ej}}}d}`87{{{h{El}}{h{En}}}Cb}{{{h{El}}}b}8{{}b}8{{{h{El}}{h{F`}}}b}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}``````````````````4````````{{}f}0`````0`0``{{{h{Fb}}}Cb}{{{h{Fd}}}Cb}{h{{h{c}}}{}}00000{{{h{j}}}{{h{jc}}}{}}00000{{{h{Fb}}}Ff}{{{h{Fd}}}Fh}{{{h{Fb}}}Fb}{{{h{Fd}}}Fd}{{{h{Ff}}}Ff}{{{h{Fh}}}Fh}{{{h{{Fj{c}}}}}{{Fj{c}}}{FlFnG`GbGdGf}}{{h{h{jc}}}b{}}0000{{hBj}b}0000{{{h{Fb}}{h{Fb}}}Cj}{{{h{Fd}}{h{Fd}}}Cj}{{{h{Ff}}{h{Ff}}}Cj}{{{h{Fh}}{h{Fh}}}Cj}{Gh}0{{{h{Fb}}{h{Fb}}}Cb}{{{h{Fd}}{h{Fd}}}Cb}{{{h{Ff}}{h{Ff}}}Cb}{{{h{Fh}}{h{Fh}}}Cb}{{{h{Fb}}}Ff}{{{h{Fd}}}Fh}{{{h{Fb}}{h{jDb}}}Af}{{{h{Fd}}{h{jDb}}}Af}{{{h{Ff}}{h{jDb}}}Af}{{{h{Fh}}{h{jDb}}}Af}{cc{}}{FfFb}1{fFb}2{FhFd}{fFd}{FbFf}{fFf}66{fFh}{FdFh}8{{{h{Ff}}}{{h{j{Bl{Bj}}}}}}{{{h{{Fj{c}}}}}c{FlFnG`GbGd}}{{{h{Fb}}}{{h{jc}}}{}}{{{h{Ff}}}{{h{jc}}}{}}{{{h{Ff}}}{{h{j{Bl{Gj}}}}}}{{{h{Fb}}}{{h{c}}}{}}4{{{h{Fh}}}{{E`{f}}}}{{}c{}}00000{{}c{}}{{{Fj{c}}}e{FlFnG`GbGd}{}}{GlFh}{Fj}{{cc}{{Gh{c}}}{FlFnG`GbGd}}{{cc}{{Fj{c}}}{FlFnG`GbGd}}{{{h{j{Gh{c}}}}}{{Dd{e}}}{FlFnG`GbGd}{}}{{{h{Fb}}}f}{{{h{Fd}}}f}{{{h{Fb}}{h{Fb}}}{{Dd{Cj}}}}{{{h{Fd}}{h{Fd}}}{{Dd{Cj}}}}{{{h{Ff}}{h{Ff}}}{{Dd{Cj}}}}{{{h{Fh}}{h{Fh}}}{{Dd{Cj}}}}:9{{{h{jFl}}}b}{{{h{jFf}}}b}{{{h{jFh}}}b}{hc{}}0000{c{{n{e}}}{}{}}00000{{}{{n{c}}}{}}00000{hA`}00000`````{Gnb}{{{h{jH`}}}{{Dd{Ff}}}}{{{h{jHb}}}{{Dd{Ff}}}}{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{Hbf}{Hdf}{{{h{jH`}}Ff}b}{{{h{jHb}}Ff}b}{{{h{Gn}}}{{h{{Bd{Hb}}}}}}{{{h{jB`}}}b}54{{{h{B`}}{h{jDb}}}Af}{{}{{Dd{B`}}}}{{}b}{Ffb}{cc{}}00{{{h{jHb}}FfFf}b}3{{}c{}}00{{}H`}{FfB`}{{}Hb}{B`Ff}{HbBb}{HdBb}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{hA`}00{{}Hf}{{}E`}{Hhd}{{}b}0```````````{Hjb}{{{h{Hl}}}b}{{}Hn}{HlBb}{{HnHn}Hn}{{{h{jHn}}Hn}b}10{{{h{Hn}}}Bj}{HnBj}32{h{{h{c}}}{}}0000{{{h{j}}}{{h{jc}}}{}}0000{{{h{I`}}}I`}{{{h{Hn}}}Hn}{{h{h{jc}}}b{}}0{{hBj}b}0{{{h{Hn}}{h{Hn}}}Cj}{HnHn}{{{h{Hn}}Hn}Cb}{{{h{jIb}}{h{Id}}{h{{Bl{Bj}}}}}b}{IbIf}{{{h{Hj}}}{{h{{Al{{Bd{Hl}}}}}}}}?{{}b}00{{}Hn}{{{h{I`}}{h{I`}}}Cb}{{{h{Hn}}{h{Hn}}}Cb}33{{{h{jHn}}c}b{{D`{}{{Cn{Hn}}}}}}{{{h{I`}}{h{jDb}}}Af}{{{h{Hn}}{h{jDb}}}Af}0000{cc{}}0000{{{h{Ib}}}Ib}{Bj{{Dd{Hn}}}}{BjHn}0{{{h{{Bl{Bj}}}}}{{Dl{Hlff}}}}{{{h{Hl}}}Hl}{cHn{{D`{}{{Cn{Hn}}}}}}{{{h{Hn}}{h{jc}}}bDf}{{{h{jHn}}Hn}b}{{{h{jHl}}FdFdHn}b}{{HnHn}Hn}{{{h{Hn}}Hn}Cb}{{}c{}}0000{{{h{Hn}}}Cb}0{{}f}{{{h{jIb}}{h{jId}}}b}{{{h{jIb}}{h{jId}}Fh}b}{IbHn}{{{h{jHl}}}b}{IbI`}{{FdFdI`Hn}Ib}{{}Hl}0{HnHn}{HlId}{{{h{Hn}}{h{Hn}}}{{Dd{Cj}}}}{{{h{jHl}}Ib{Dd{{h{{Bl{Bj}}}}}}}b}7{{}b}{{{h{jHn}}Hn}b}{{{h{jHl}}Fh}b}22{{{h{jHn}}HnCb}b}333{{HnHn}Hn}30{hc{}}04{{{h{Hl}}}f}{{{h{Hl}}Fh}{{Dd{Gj}}}}{c{{n{e}}}{}{}}0000{{}{{n{c}}}{}}0000{hA`}00006{{{h{jIb}}{h{jId}}}b}{{{h{jIb}}{h{jId}}Fh}b}{IbFj}`````````````{{}Ih}{{IhIh}Ih}{{{h{jIh}}Ih}b}10{{{h{Ih}}}Bj}{IhBj}{Gjf}43{h{{h{c}}}{}}0000{{{h{j}}}{{h{jc}}}{}}0000{C`Bb}{IjBb}{{{h{Ih}}}Ih}{{{h{Gj}}}Gj}{{h{h{jc}}}b{}}0{{hBj}b}0{{{h{Ih}}{h{Ih}}}Cj}{IhIh}{{{h{Ih}}Ih}Cb}{Ijf}0{{IhIh}Ih}{{}Ih}{{}Gj}{{{h{Ih}}{h{Ih}}}Cb}{{{h{Gj}}}Cb}{{{h{jIh}}c}b{{D`{}{{Cn{Ih}}}}}}{{{h{Id}}Fh}{{Dd{{h{jGj}}}}}}{{{h{jId}}Fh}{{Dd{{h{jGj}}}}}}{{{h{Gj}}}Ih}{{{h{Ih}}{h{jDb}}}Af}0000{IdBb}{cc{}}0000{Bj{{Dd{Ih}}}}{BjIh}0{cIh{{D`{}{{Cn{Ih}}}}}}{fId}{{{h{Ih}}{h{jc}}}bDf}{{{h{jIh}}Ih}b}{{IhIh}Ih}{{{h{Ih}}Ih}Cb}{{}c{}}0000{C`c{}}{{}c{}}{{{h{Ih}}}Cb}0{{{h{Gj}}}Cb}{{{h{C`}}}f}{{{h{jId}}FhFfIh}b}{{}Id}{{{Bb{{h{j{Bl{Bj}}}}}}}C`}{{FfIh}Gj}{{{h{jIj}}}{{Dd{c}}}{}}{IhIh}{{{h{Ih}}{h{Ih}}}{{Dd{Cj}}}}{{{h{Gj}}}Ff}9{{{h{jIh}}Ih}b}{IdFf}{{{h{jIh}}IhCb}b}{{IhIh}Ih}30{hc{}}04{{{h{Id}}}f}{{{h{Id}}Fh}{{Dd{Gj}}}}{{{h{Id}}Fd}{{Dd{Fb}}}}{{fBjf}{{Bb{{h{j{Bl{Bj}}}}}}}}{f{{h{c}}}{}}{f{{h{jc}}}{}}{{fBj}Il}{c{{n{e}}}{}{}}0000{{}{{n{c}}}{}}0000{hA`}0000;{{{h{jId}}Fh}b}{{{h{Gj}}}Cb}{{}f}{fb}0{Cbd}```{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{{Bd{c}}}}}{{In{c}}}{}}{cc{}}{BdJ`}{{}c{}}{c{{Bd{c}}}{}}>=<99999999999999999``{{f{E`{f}}}Jb}{fJb}0{{BjCh}Jb}1{{fBjf}Jb}0{{Jdff}Cb}{{Bjf}Jb}{Bfd}{{}Jb}00{{fBf}Jb}{{BfJfJf}Jb}{ChJb}3{{JbBf}Jb}4{{}f}````````{Jhb}`{{}b}`{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{Jdb}{{fJd}b}4{{}{{Dd{{Dl{Bf{h{Ad}}}}}}}}`2```{{{h{Jh}}}{{h{{Al{Jj}}}}}}{Bfb}{cc{}}8{{}c{}}````````9```{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}``;;::{{{h{Jf}}}Jf}{{{h{Jl}}}Jl}{{h{h{jc}}}b{}}0{{hBj}b}0{{}Jf}{{}Jl}{{{h{Jf}}{h{jDb}}}Af};;{Jff};;{JfJd}{JlE`}{hc{}}0==<<;;`{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{cc{}}{fJn}{{}c{}}{Jnf}{JnE`}1{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}{{}Jn}```{K`b}{Kbb}{{{h{jKd}}{Al{Jj}}}b}{{{Al{Jj}}}b}>>>==={{{h{K`}}}{{h{{Bd{Kd}}}}}}{{{h{Kb}}}{{h{{Bd{{If{f{Al{Jj}}}}}}}}}}{{{h{jKd}}}{{Dd{{Al{Jj}}}}}}{{}{{Dd{{Al{Jj}}}}}}{cc{}}00???{{}Kd}{f{{Dd{{Al{Jj}}}}}}{KdKf}{fb}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{hA`}00````{Khb}{{{h{jKj}}}Kl}{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{Kjf}{{{h{jKj}}f}b}{{{h{Kh}}}{{h{{Bd{Kj}}}}}}{{{h{jKl}}}b}{{{h{jKn}}}b}{cc{}}000{{{h{Kn}}}f}{{}c{}}000{f{{Dl{ff}}}}{{}Kj}{{{h{Kl}}}Kn}{Knf}{{}Kl}{{{h{Kn}}c}{}L`}{KjBb}{c{{n{e}}}{}{}}000{{}{{n{c}}}{}}000{hA`}000``{Lbb}{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{{h{Ld}}}{{Dd{{Al{Jj}}}}}}{LdDd}{{}{{Dd{{Al{Jj}}}}}}{{}{{h{jLf}}}}{{}f}{{{h{Lb}}}{{h{{Bd{Ld}}}}}}{cc{}}0{{{h{jLd}}}Jn}{LdJn}{{}c{}}0{{}Ld}{{}b}{Jnb}{{{h{jLd}}}{{Dd{{Al{Jj}}}}}};{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{hA`}0<`````````````````````````````````{{}Jd}{{JdJd}Jd}{{{h{jJd}}Jd}b}10{{{h{Jd}}}Ch}{JdCh}32{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Jd}}}{{Dd{{Dl{Bf{h{Ad}}}}}}}}{{{h{Jd}}}Jd}{{h{h{jc}}}b{}}{{hBj}b}{{{h{Jd}}{h{Jd}}}Cj}{JdJd}{{{h{Jd}}Jd}Cb}<={{{h{Jd}}{h{Jd}}}Cb}{{{h{jJd}}c}b{{D`{}{{Cn{Jd}}}}}}{{{h{Jd}}{h{jDb}}}Af}0000{cc{}}{Ch{{Dd{Jd}}}}{ChJd}0{cJd{{D`{}{{Cn{Jd}}}}}}{{{h{Jd}}{h{jc}}}bDf}{{{h{jJd}}Jd}b}{{JdJd}Jd}:{{}c{}}{{{h{Jd}}}Cb}0={{{h{Jd}}{h{Jd}}}{{Dd{Cj}}}}4{{{h{jJd}}JdCb}b}454{hc{}}6{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}8{{JnJn}b}``````{{{h{jLh}}}f}{Lhf}{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{LhBb}{{{h{Lj}}}Lj}{{h{h{jc}}}b{}}{{hBj}b}{{{h{Lj}}{h{Lj}}}Cb}{{{h{Jj}}{h{{Bl{Bj}}}}{Bb{Il}}}b}{LhBf}6{{{h{{Al{Jj}}}}}{{Al{Jj}}}}{cc{}}00{LhCb}{{{h{Lh}}}Lj}{{{h{Lh}}}{{h{jLf}}}}{{{h{Lh}}}f}{{{h{Jj}}}f}{LhJb}{JjBd}{{{h{Jj}}}{{In{Lh}}}}{{}c{}}00{{{h{Lh}}}Cb}{JjKn}:{LhHl}{{{h{{Bl{Bj}}}}}Jj}{LhDd}{JjKl}{LhJl}{LhJd}0{LhJn}{LhLj}{hc{}}6{LhFf}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{hA`}00{{}f}000{{}b}``0000{{}d}00`{{fffff}Lf}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Lf}}}Lf}{{h{h{jc}}}b{}}{{hBj}b}{{{h{Lf}}{h{jDb}}}Af}{cc{}}{{}c{}}{Lff}00{{{h{jLf}}f}b}{LfLl}{hc{}}3{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{hA`}{LfE`}","D":"ANl","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[0,"mut"],[5,"Arguments",1206],[6,"Result",1207,null,1],[5,"TypeId",1208],[5,"Stdout",32],[1,"str"],[8,"Result",1206],[5,"BLOCK_DEVICE",45],[10,"BlockDevice",1209],[5,"Arc",1210,null,1],[5,"QUEUE_FRAMES",58],[5,"FrameTracker",450],[5,"Vec",1211],[5,"UPSafeCell",774],[1,"i32"],[5,"VirtIOBlock",58],[1,"u8"],[1,"slice"],[10,"File",92],[5,"UserBuffer",639],[1,"bool"],[5,"ROOT_INODE",106],[5,"OpenFlags",106],[1,"u32"],[6,"Ordering",1212],[5,"Inode",1213],[17,"Item"],[10,"IntoIterator",1214],[5,"Formatter",1206],[6,"Option",1215,null,1],[10,"Hasher",1216],[5,"OSInode",106],[5,"OSInodeInner",106],[1,"tuple",null,null,1],[5,"PipeRingBuffer",203],[1,"array"],[5,"Pipe",203],[6,"RingBufferStatus",203],[5,"Stdin",258],[5,"Stdout",258],[5,"PanicInfo",1217],[5,"SimpleLogger",283],[5,"Metadata",1218],[5,"Record",1218],[5,"PhysAddr",322],[5,"VirtAddr",322],[5,"PhysPageNum",322],[5,"VirtPageNum",322],[5,"SimpleRange",322],[10,"StepByOne",322],[10,"Copy",1219],[10,"PartialEq",1212],[10,"PartialOrd",1212],[10,"Debug",1206],[10,"Clone",1220],[5,"SimpleRangeIterator",322],[5,"PageTableEntry",639],[8,"VPNRange",322],[5,"FRAME_ALLOCATOR",450],[10,"FrameAllocator",450],[5,"StackFrameAllocator",450],[8,"FrameAllocatorImpl",450],[5,"LockedHeap",1221],[5,"Layout",1222],[5,"KERNEL_SPACE",504],[5,"MemorySet",504],[5,"MapPermission",504],[6,"MapType",504],[5,"MapArea",504],[5,"PageTable",639],[5,"BTreeMap",1223],[5,"PTEFlags",639],[5,"UserBufferIterator",639],[5,"String",1224],[5,"RefMut",1225],[5,"RefCell",1225],[1,"isize"],[5,"SignalFlags",1023],[5,"SignalAction",867],[5,"INITPROC",823],[5,"TaskControlBlock",1110],[5,"SignalActions",867],[5,"TaskContext",897],[5,"TASK_MANAGER",910],[5,"PID2TCB",910],[5,"TaskManager",910],[5,"VecDeque",1226],[5,"PID_ALLOCATOR",946],[5,"PidAllocator",946],[5,"PidHandle",946],[5,"KernelStack",946],[10,"Sized",1219],[5,"PROCESSOR",993],[5,"Processor",993],[5,"TrapContext",1185],[5,"TaskControlBlockInner",1110],[6,"TaskStatus",1110],[5,"Sstatus",1227],[5,"VirtioHal",58]],"r":[[22,18],[25,18],[26,18],[42,45],[43,45],[46,58],[93,106],[94,258],[95,258],[97,106],[98,203],[99,106],[295,450],[296,504],[297,504],[298,504],[299,504],[300,639],[301,639],[302,322],[303,322],[304,322],[305,639],[306,322],[307,322],[309,450],[311,450],[314,504],[317,504],[318,639],[319,639],[320,639],[321,639],[772,774],[825,946],[826,1023],[827,946],[828,867],[829,867],[830,1023],[831,897],[835,910],[844,993],[845,993],[846,993],[854,910],[855,946],[857,993],[858,993],[862,993],[1176,1185]],"b":[[144,"impl-UpperHex-for-OpenFlags"],[145,"impl-Debug-for-OpenFlags"],[146,"impl-Binary-for-OpenFlags"],[147,"impl-Octal-for-OpenFlags"],[148,"impl-LowerHex-for-OpenFlags"],[382,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[384,"impl-From%3Cusize%3E-for-PhysAddr"],[386,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[387,"impl-From%3Cusize%3E-for-VirtAddr"],[388,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[389,"impl-From%3Cusize%3E-for-PhysPageNum"],[392,"impl-From%3Cusize%3E-for-VirtPageNum"],[393,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[560,"impl-LowerHex-for-MapPermission"],[561,"impl-UpperHex-for-MapPermission"],[562,"impl-Octal-for-MapPermission"],[563,"impl-Binary-for-MapPermission"],[564,"impl-Debug-for-MapPermission"],[694,"impl-Debug-for-PTEFlags"],[695,"impl-Binary-for-PTEFlags"],[696,"impl-Octal-for-PTEFlags"],[697,"impl-LowerHex-for-PTEFlags"],[698,"impl-UpperHex-for-PTEFlags"],[1079,"impl-UpperHex-for-SignalFlags"],[1080,"impl-LowerHex-for-SignalFlags"],[1081,"impl-Octal-for-SignalFlags"],[1082,"impl-Binary-for-SignalFlags"],[1083,"impl-Debug-for-SignalFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMADWQAAAAsADQAWACYADgA3ABEATwAlAHsAAAB+AAsAjAAAAI8ABgCdAAMAqgABAK0ABACzAAEAugAAALwACwDJABgA5QAAAOoAHgANARMAIgEAACQBIABGATcAfwEAAIEBAACDAQMAiQEBAIwBBwCaAUIA4AEBAOUBIAAHAgAADQIAABACEAAkAgEAJwICACsCCgA7AgAAQAICAE4CAwBTAgIAWAIEAF4CAgBiAgIAaAIBAGsCEAB9Ag8AkwIBAJcCEgCsAgEAsAIMAMUCAADHAgAA0AIBANQCBgDcAgIA4AIAAOUCAQDoAgUA7wIOAP8CAQAFAwEACAMBAA8DJgA3AwAAOQMXAFMDAABVAw4AZQMNAHUDAAB4AwwAhgMAAIgDFwCmAx8AygMAANADHgDxAwEA9QMsACgEAAArBAYANgQGAEEEAQBKBAAAUAQAAFIEAgBXBBYAcQQHAHwEIgCiBAcArAQKAA==","P":[[33,"T"],[36,"U"],[37,""],[38,"U,T"],[39,"U"],[40,""],[49,"T"],[51,""],[52,"T"],[53,"U"],[54,"U,T"],[55,"U"],[56,""],[63,"T"],[69,""],[72,"T"],[75,"U"],[78,""],[81,"U,T"],[84,"U"],[87,""],[125,"T"],[133,""],[134,"T"],[135,""],[143,"T"],[144,""],[149,"T"],[153,""],[156,"T"],[157,"__H"],[158,""],[163,"U"],[167,""],[185,"T"],[186,""],[187,"U,T"],[191,"U"],[195,""],[214,"T"],[220,""],[222,"T"],[223,""],[225,"T"],[228,""],[229,"U"],[232,""],[242,"T"],[243,"U,T"],[246,"U"],[249,""],[260,"T"],[266,"U"],[268,""],[272,"U,T"],[274,"U"],[276,""],[284,"T"],[286,""],[288,"T"],[289,""],[290,"U"],[291,""],[292,"U,T"],[293,"U"],[294,""],[336,"T"],[348,""],[354,"T"],[360,""],[381,"T"],[382,""],[383,"T"],[384,""],[385,"T"],[386,""],[390,"T"],[392,""],[394,"T"],[395,""],[396,"T"],[399,""],[400,"T"],[402,""],[403,"U"],[409,"I"],[410,"T,IntoIterator::IntoIter"],[411,""],[413,"T"],[415,"T,Iterator::Item"],[416,""],[427,"T"],[432,"U,T"],[438,"U"],[444,""],[458,"T"],[464,""],[476,"T"],[479,""],[481,"U"],[484,""],[490,"U,T"],[493,"U"],[496,""],[527,"T"],[537,""],[539,"T"],[541,""],[558,"T"],[559,""],[565,"T"],[570,""],[576,"T"],[577,"__H"],[578,""],[582,"U"],[587,""],[615,"T"],[617,""],[620,"U,T"],[625,"U"],[630,""],[662,"T"],[672,""],[676,"T"],[678,""],[690,"T"],[691,""],[700,"T"],[705,""],[708,"T"],[709,""],[710,"__H"],[711,""],[714,"U"],[719,"IntoIterator::IntoIter"],[720,"I"],[721,""],[729,"Iterator::Item"],[730,""],[740,"T"],[742,""],[747,"T"],[749,""],[750,"U,T"],[755,"U"],[760,""],[775,"T"],[779,""],[780,"U"],[781,"T"],[782,"U,T"],[783,"U"],[784,""],[836,"T"],[838,""],[849,"T"],[850,""],[851,"U"],[860,""],[864,"U,T"],[865,"U"],[866,""],[869,"T"],[873,""],[875,"T"],[877,""],[882,"T"],[884,""],[885,"U"],[887,""],[889,"T"],[891,"U,T"],[893,"U"],[895,""],[898,"T"],[901,""],[902,"U"],[903,""],[906,"U,T"],[907,"U"],[908,""],[917,"T"],[923,""],[927,"T"],[930,"U"],[933,""],[937,"U,T"],[940,"U"],[943,""],[952,"T"],[960,""],[965,"T"],[969,""],[970,"U"],[974,""],[979,"T"],[980,""],[981,"U,T"],[985,"U"],[989,""],[996,"T"],[1000,""],[1006,"T"],[1008,""],[1010,"U"],[1012,""],[1017,"U,T"],[1019,"U"],[1021,""],[1066,"T"],[1068,""],[1070,"T"],[1071,""],[1078,"T"],[1079,""],[1084,"T"],[1085,""],[1088,"T"],[1089,"__H"],[1090,""],[1093,"U"],[1094,""],[1103,"T"],[1104,""],[1105,"U,T"],[1106,"U"],[1107,""],[1118,"T"],[1124,""],[1126,"T"],[1127,""],[1133,"T"],[1136,""],[1144,"U"],[1147,""],[1159,"T"],[1160,""],[1162,"U,T"],[1165,"U"],[1168,""],[1187,"T"],[1189,""],[1190,"T"],[1191,""],[1193,"T"],[1194,"U"],[1195,""],[1200,"T"],[1201,""],[1202,"U,T"],[1203,"U"],[1204,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[29563]}